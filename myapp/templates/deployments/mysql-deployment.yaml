apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.mysql.name }}
  namespace: {{ .Values.mysql.namespace }} 
  labels:
    {{- include "myapp.labels" . | nindent 4 }}
spec:
  {{- if not .Values.mysql.autoscaling.enabled }}
  replicas: {{ .Values.mysql.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "myapp.selectorLabels" . | nindent 6 }}
  serviceName: {{ .Values.mysql.name }}    
  template:
    metadata:
      {{- with .Values.mysql.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "myapp.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Values.mysql.name }}
          env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.mysql.name  }}
                key: db_secret_key
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Values.mysql.name  }}
                key: db_secret_user      
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.mysql.image.repository }}:{{ .Values.mysql.image.tag }}"
          imagePullPolicy: {{ .Values.mysql.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3306
              protocol: TCP
          volumeMounts:
          - name: {{ .Values.mysql.name }}
            mountPath: /var/lib/mysql
      volumes:
      - name: {{ .Values.mysql.name }}
        persistentVolumeClaim:
          claimName: {{ .Values.mysql.persistenceclaim.pvcname }}   
